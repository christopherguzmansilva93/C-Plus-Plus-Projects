#include <cmath>
#include <iostream>
#include <cstdlib>
using namespace std;

bool ok(int board[8]){


    for(int columns = 7; columns > 0; columns--){
        int r = 0;
        r=board[columns];         
       
       // For loop to check rows,up diagonal and down diagonal
        for(int i = 1; i <= columns; i++){
            if(board[columns-i] == r)                        
                return false;
            else if (board[columns-i] == r-i)                  
                return false;
            else if (board[columns-i] == r+i) 
                return false;
        } 
    } 
        return true;
}

void print(int board[8], int count){ 
     
    //printing the solution with the board creating a 1d array
    
    cout << "Solution: "<< count << endl;
    int sol[8][8]={0};
        
        for(int j = 0; j < 8; j++){
            sol[board[j]][j]=1;
        }
        for(int i=0;i<8;i++){
            for(int j=0;j<8;j++){
             cout<<sol[i][j]<< " ";               
            }                           
          cout<<endl;              
         }   
        cout << endl;
}

int main (){
   
    // Using the layout from lab15 as a template 
   
    int board[8]={0};
    int count = 0;
    for(int i0 = 0; i0 < 8; i0++)
       for(int i1=0; i1 < 8; i1++)
        for(int i2 = 0; i2 < 8; i2++)
         for(int i3 = 0; i3 < 8; i3++)
           for(int i4 = 0; i4 < 8; i4++)
            for(int i5 = 0; i5 < 8; i5++)
             for(int i6 = 0; i6 < 8; i6++)
               for(int i7 = 0; i7 < 8; i7++){
                            board[0]=i0;                   
                            board[1]=i1;
                            board[2]=i2;
                            board[3]=i3;
                            board[4]=i4;
                            board[5]=i5;
                            board[6]=i6;
                            board[7]=i7;

                            if(ok(board))print(board, ++count);
                            }
                            
    
    return 0;
}
